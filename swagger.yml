openapi: 3.0.0
info:
  title: Celulou API
  description: API para um sistema de ecommerce simples
  version: "1.0"
servers:
  - url: http://localhost:3000/
    description: Servidor local para receber requisições como desenvolvedor

components:
  schemas:
    Cliente:
      type: object
      properties:
        nomeCliente: 
          type: string
          example: "Victor Oliveira"
        cpfCliente:
          type: string
          example: "248.927.760-09"
          description: CPF do cliente (pode ser inserido com ou sem pontos e traços)
        celularCliente:
          type: string
          example: "11956365632"
          description: Celular do cliente (somente números, sem pontos e traços) e deve conter de 10 a 12 caracteres
        emailCliente:
          type: string
          example: "victor@gmail.com"
          format: email
          description: Endereço de e-mail do cliente.
      required:
        - nomeCliente
        - cpfCliente
        - celularCliente
        - emailCliente

    Endereco:
      type: object
      properties:
        cep:
          type: string
          example: "12970-000"
        nomeRua:
          type: string
          example: "Rua 1"
        numeroCasa:
          type: string
          example: "11C"
        complemento:
          type: string
          example: "Apartamento 14A"
        bairro:
          type: string
          example: "Centro"
        cidade:
          type: string
          example: "São José dos Campos"
        estado:
          type: string
          example: "São Paulo"
        codigoCliente:
          type: string
          example: "CQWERTYUIQWE"
      required:
        - cep
        - nomeRua
        - numeroCasa
        - complemento
        - bairro
        - cidade
        - estado
        - codigoCliente
    
    Categoria:
      type: object
      properties:
        nomeCategoria:
          type: string
          example: "Basicos"
      required:
        - nomeCategoria

paths:
  /cliente:
    post:
      summary: Cria um novo cliente.
      description: Essa rota é a responsável pela criação de um novo cliente. Todos os clientes começam sem serem administradores.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        '201':    # status code
          description: Cliente cadastrado com sucesso!
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  message: 
                    type: string
                    example: "Cliente cadastrado com sucesso!"
        '400':
          description: Ocorreu algum erro nos dados enviados pelo cliente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "O CPF é inválido"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "Unexpected Error!"

  /cliente/{codigo}:
    get:
      summary: Busca um cliente pelo codigo
      description: Busca um cliente que possua um codigo identico ao da url
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        '200':
          description: Um objeto de cliente
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      codigoCliente:
                        type: string
                        description: Código do cliente.
                      nomeCliente:
                        type: string
                        description: Nome do cliente.
                      cpfCliente:
                        type: string
                        description: CPF do cliente
                      celularCliente:
                        type: string
                        description: Celular do cliente.
                      emailCliente:
                        type: string
                        description: E-mail do cliente.
                      createdAt:
                        type: string
                        format: date # or date-time
                        description: Data e hora da criação do cliente.
              example:
                result:
                  codigoCliente: "Cdtoluifd7u7"
                  nomeCliente: "Victor"
                  cpfCliente: "15466379077"
                  celularCliente: "11965049540"
                  emailCliente: "victor1@gmail.com"
                  createdAt: "2024-04-02T13:38:38.453Z"
        '404':
          description: Nenhum cliente encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Cliente não encontrado"
    
    put:
      summary: Altera dados de um cliente
      description: Altera os dados de um cliente com base no código passado pela url
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados
          required: true
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
              
      responses:
        '200':
          description: Dados atualizados com sucesso!
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  message: 
                    type: string
                    example: "Dados atualizados com sucesso!"

        '400':
          description: Ocorreu algum erro nos dados enviados pelo cliente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "O CPF é inválido"

        '404':
          description: Nenhum cliente encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Cliente não encontrado"

        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "Unexpected Error!"
    
    delete:
      summary: Deleta um cliente
      description: Deleta um cliente do banco com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        '200':
          description: Cliente deletado com sucesso!
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  message: 
                    type: string
                    example: "Cliente deletado com sucesso!"

        '404':
          description: Nenhum cliente encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Cliente não encontrado"

        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "Unexpected Error!"

  /endereco:
    post:
      summary: Cria um novo endereço
      description: Essa rota é a responsável pela criação de um novo endereço, atrelado a um cliente existente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endereco'
      responses:
        '201':
          description: Endereço cadastrado com sucesso!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: "Endereço cadastrado com sucesso!"
        '400':
          description: Ocorreu algum erro nos dados enviados pelo cliente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "É necessário inserir uma rua"
        '404':
          description: Cliente não encontrado!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Cliente não encontrado!"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: 
                    type: string
                    example: "Unexpected Error!"
    get:
      summary: Buscar endereço pelo código
      description: Busca um endereço específico com base no seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do endereço (12 digitos) para buscá-lo no banco de dados
          required: true

      responses:
        '200':
          description: Um objeto de endereço
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      codigoEndereco:
                        type: string
                        example: "Ebcglv163kci"
                      cep:
                        type: string
                        example: "12970000"
                      nomeRua:
                        type: string
                        example: "Rua 1"
                      numeroCasa:
                        type: string
                        example: "11B"
                      complemento:
                        type: string
                        example: "Apartamento 2B"
                      bairro:
                        type: string
                        example: "Centro"
                      cidade:
                        type: string
                        example: "São José dos Campos"
                      estado:
                        type: string
                        example: "São Paulo"

            result:
              example:
                codigoCliente: "Cdtoluifd7u7"
                nomeCliente: "Victor"
                cpfCliente: "15466379077"
                celularCliente: "11965049540"
                emailCliente: "victor1@gmail.com"
                createdAt: "2024-04-02T13:38:38.453Z"
        '404':
          description: Endereço não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Endereço não encontrado!"

  /enderecos/:codigo:
    get:
      summary: Busca todos os endereços de um cliente
      description: Essa rota é responsável por fazer a busca de todos os endereços cadastrados de um cliente em específico com base no seu codigo
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados e buscar os seus endereços
          required: true
      responses:
          '200':
            description: Um array com vários endereços
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    result:
                      type: array
                      items:
                        $ref: '#/components/schemas/Endereco'
          '404':
            description: Dados não encontrados
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                      example: "Nenhum endereço encontrado!"
          
          default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error: 
                      type: string
                      example: "Unexpected Error!"

    put:
      summary: Atualiza dados de endereço
      description: Atualiza os dados de um endereço com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do endereço (12 digitos) para buscá-lo no banco de dados
          required: true
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              properties:
                cep:
                  type: string
                  example: "12970000"
                nomeRua:
                  type: string
                  example: "Rua 1"
                numeroCasa:
                  type: string
                  example: "20"
                complemento:
                  type: string
                  example: "Apartamento 1C"
                bairro:
                  type: string
                  example: "Centro"
                cidade:
                  type: string
                  example: "Piracaia"
                estado:
                  type: string
                  example: "São Paulo"
      responses:
        '200':
          description: Dados alterados com sucesso!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Dados atualizados com sucesso!"
        
        '400':
          description: Erro em algum dos dados enviados pelo cliente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "O tamanho do cep precisa ser de 8 caracteres"
        
        '404':
          description: Erro informando que algo não foi encontrado
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                    type: string
                    example: "Endereço não encontrado!"
        
        default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error: 
                      type: string
                      example: "Unexpected Error!"

    delete:
      summary: Deleta um endereço
      description: Deleta um endereço com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do endereço (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        '200':
          description: Endereço deletado com sucesso!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: "Endereço deletado com sucesso!"
        
        '404':
          description: Endereço não encontrado!
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Endereço não encontrado!"
        
        default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error: 
                      type: string
                      example: "Unexpected Error!"
  
  /categoria/:
    post:
      summary: Criar nova categoria
      description: Esta é uma rota para a criação de uma nova categoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categoria'
      responses:
        '201':
          description: Categoria cadastrada com sucesso!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
                    example: "Categoria cadastrada com sucesso!"
        
        '400':
          description: Erro nos dados enviados pelo cliente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Esta categoria já existe"
        
        default:
            description: Unexpected Error
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error: 
                      type: string
                      example: "Unexpected Error!"