openapi: 3.0.0
info:
  title: Celulou API
  description: API para um sistema de ecommerce simples
  version: "1.0"
servers:
  - url: http://localhost:3000/
    description: Servidor local para receber requisições como desenvolvedor

components:
  schemas:
    Cliente:
      type: object
      properties:
        codigoCliente:
          type: string
          example: "CAABBBCCCDDD"
          readOnly: true
        nomeCliente: 
          type: string
          example: "Victor Oliveira"
        cpfCliente:
          type: string
          example: "248.927.760-09"
          description: CPF do cliente (pode ser inserido com ou sem pontos e traços)
        celularCliente:
          type: string
          example: "11956365632"
          description: Celular do cliente (somente números, sem pontos e traços) e deve conter de 10 a 12 caracteres
        emailCliente:
          type: string
          example: "victor@gmail.com"
          format: email
          description: Endereço de e-mail do cliente.
        createdAt:
          type: string
          format: date # or date-time
          description: Data e hora da criação do cliente.
          readOnly: true
      required:
        - nomeCliente
        - cpfCliente
        - celularCliente
        - emailCliente

    Endereco:
      type: object
      properties:
        cep:
          type: string
          example: "12970-000"
        nomeRua:
          type: string
          example: "Rua 1"
        numeroCasa:
          type: string
          example: "11C"
        complemento:
          type: string
          example: "Apartamento 14A"
        bairro:
          type: string
          example: "Centro"
        cidade:
          type: string
          example: "São José dos Campos"
        estado:
          type: string
          example: "São Paulo"
        codigoCliente:
          type: string
          example: "CQWERTYUIQWE"
      required:
        - cep
        - nomeRua
        - numeroCasa
        - complemento
        - bairro
        - cidade
        - estado
        - codigoCliente
    
    Categoria:
      type: object
      properties:
        nomeCategoria:
          type: string
          example: "Basicos"
      required:
        - nomeCategoria

    Produto:
      type: object
      properties:
        codigoProduto:
          type: string
          example: "PAABBBCCCDDD"
          readOnly: true
        valor:
          type: number
          description: Valor do produto em Reais R$
          minimum: 0
          maximum: 99999999.99
          example: 22222222.22
        nomeProduto:
          type: string
          description: Nome do produto
          minLength: 0
          maxLength: 45
          example: "Samsung Galaxy A54"
        marca:
          type: string
          description: Nome da marca fabricante do produto
          minLength: 0
          maxLength: 45
          example: "Samsung"
        descricaoProduto:
          type: string
          description: Descrição detalhada do produto
          example: "Smartphone Samsung Galaxy A54 5G 128GB Tela 6.4'' Dual Chip 8GB RAM Branco Câmera Tripla de até 50MP Selfie 32MP"
        imagensFolder:
          type: string
          description: Endereço local onde as imagens do produto estão armazenadas
          example: "/produtos/PAABBBCCCDDD"
          readOnly: true
        nota:
          type: number
          description: Nota geral do produto com base nas avaliações atribuidas a ele
          nullable: true
          minimum: 0
          maximum: 5.00
          example: 4.98
          readOnly: true
        pesoGramas:
          type: number
          description: Peso em gramas do produto completo no envio (dispositivo, caixa e acessórios)
          minimum: 0
          maximum: 9999.99
          example: 2222.22
        alturaCM:
          type: number
          description: Altura em centímetros do produto a ser enviado
          minimum: 0
          maximum: 99.99
          example: 22.22
        larguraCM:
          type: number
          description: Largura em centímetros do produto a ser enviado
          minimum: 0
          maximum: 99.99
          example: 22.22
        comprimentoCM:
          type: number
          description: Comprimento em centímetros do produto a ser enviado
          minimum: 0
          maximum: 99.99
          example: 22.22
        isDisponivelCompra:
          type: boolean
          description: Mostra se um determinado produto está disponível para compras
          readOnly: true
        isVisivel:
          type: boolean
          description: Mostra se um determinado produto está disponível para ser exibido para todos os usuários do sistema
          readOnly: true

      required:
        - valor
        - nomeProduto
        - marca
        - descricaoProduto
        - pesoGramas
        - alturaCM
        - larguraCM
        - comprimentoCM

  responses:
    Sucesso:
      description: Deu tudo certo!
      content:
        application/json:
          schema:
            type: object
            properties:
              message: 
                type: string
                example: "Dados alterados com sucesso!"

    Criado:
      description: Objeto criado com sucesso!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Item criado com sucesso!"

    Error400:
      description: Ocorreu um erro em um dos dados enviados
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: O valor precisa ser uma string!

    Error404:
      description: Algo não foi encontrado
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "O item não foi encontrado!"

    ErrorDefault:
      description: Erro inesperado!
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Unexpected Error!

paths:
  /cliente:
    post:
      summary: Cria um novo cliente.
      description: Essa rota é a responsável pela criação de um novo cliente.
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
      responses:
        '201':
          $ref: '#/components/responses/Criado'
        '400':
          $ref: '#/components/responses/Error400'
        default:
          $ref: '#/components/responses/ErrorDefault'

  /cliente/{codigo}:
    get:
      summary: Busca um cliente pelo codigo
      description: Busca um cliente que possua um codigo identico ao da url
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        '200':
          description: Um objeto de cliente
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/Cliente'
              example:
                result:
                  codigoCliente: "Cdtoluifd7u7"
                  nomeCliente: "Victor"
                  cpfCliente: "15466379077"
                  celularCliente: "11965049540"
                  emailCliente: "victor1@gmail.com"
                  createdAt: "2024-04-02T13:38:38.453Z"
        '404':
          $ref: "#/components/responses/Error404"
    
    put:
      summary: Altera dados de um cliente
      description: Altera os dados de um cliente com base no código passado pela url
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados
          required: true
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Cliente'
              
      responses:
        '200':
          $ref: '#/components/responses/Sucesso'

        '400':
          $ref: "#/components/responses/Error400"

        '404':
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"
    
    delete:
      summary: Deleta um cliente
      description: Deleta um cliente do banco com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        '200':
          $ref: "#/components/responses/Sucesso"

        '404':
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /endereco:
    post:
      summary: Cria um novo endereço
      description: Essa rota é a responsável pela criação de um novo endereço, atrelado a um cliente existente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Endereco'
      responses:
        '201':
          $ref: "#/components/responses/Criado"
        '400':
          $ref: "#/components/responses/Error400"
        '404':
          $ref: "#/components/responses/Error404"
        default:
          $ref: "#/components/responses/ErrorDefault"
  /endereco/:codigo: 
    get:
      summary: Buscar endereço pelo código
      description: Busca um endereço específico com base no seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do endereço (12 digitos) para buscá-lo no banco de dados
          required: true

      responses:
        '200':
          description: Um objeto de endereço
          content:
            application/json:
              schema:
                type: object
                properties:  
                  result:
                    $ref: '#/components/schemas/Endereco'

            result:
              example:
                codigoCliente: "Cdtoluifd7u7"
                nomeCliente: "Victor"
                cpfCliente: "15466379077"
                celularCliente: "11965049540"
                emailCliente: "victor1@gmail.com"
                createdAt: "2024-04-02T13:38:38.453Z"
        '404':
          $ref: "#/components/responses/Error404"
        
        default:
          $ref: '#/components/responses/ErrorDefault'

  /enderecos/{codigo}:
    get:
      summary: Busca todos os endereços de um cliente
      description: Essa rota é responsável por fazer a busca de todos os endereços cadastrados de um cliente em específico com base no seu codigo
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do cliente (12 digitos) para buscá-lo no banco de dados e buscar os seus endereços
          required: true
      responses:
          '200':
            description: Um array com vários endereços
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    result:
                      type: array
                      items:
                        $ref: '#/components/schemas/Endereco'
          '404':
            $ref: "#/components/responses/Error404"
          
          default:
            $ref: "#/components/responses/ErrorDefault"

    put:
      summary: Atualiza dados de endereço
      description: Atualiza os dados de um endereço com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do endereço (12 digitos) para buscá-lo no banco de dados
          required: true
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Endereco'
      responses:
        '200':
          $ref: "#/components/responses/Sucesso"
        
        '400':
          $ref: "#/components/responses/Error400"
        
        '404':
          $ref: "#/components/responses/Error404"
        
        default:
          $ref: "#/components/responses/ErrorDefault"

    delete:
      summary: Deleta um endereço
      description: Deleta um endereço com base em seu código
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo do endereço (12 digitos) para buscá-lo no banco de dados
          required: true
      responses:
        '200':
          $ref: "#/components/responses/Sucesso"
        
        '404':
          $ref: "#/components/responses/Error404"
        
        default:
          $ref: "#/components/responses/ErrorDefault"
  
  /categoria/:
    post:
      summary: Criar nova categoria
      description: Esta é uma rota para a criação de uma nova categoria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Categoria'
      responses:
        '201':
          $ref: "#/components/responses/Criado"
        
        '400':
          $ref: "#/components/responses/Error400"
        
        default:
          $ref: "#/components/responses/ErrorDefault"
    
  /categorias/:
    get:
      summary: Buscar todas as categorias
      description: Faz a busca de todas as categorias presentes no banco de dados
      responses:
        '200':
          description: Um array com várias categorias
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Categoria'
        
        '404':
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"
  
  /categorias/{filtro}:
    get:
      summary: Buscar todos as categorias com base no filtro
      description: Filtra todas as categorias do banco com base no nome da categoria
      parameters:
        - in: path
          name: filtro
          schema:
            type: string
            description: Palavra ou parte de palavra para buscar as categorias
          required: true
      responses:
        '200':
          description: Devolve um array com as categorias encontradas
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Categoria'
        
        '404':
          $ref: "#/components/responses/Error404"

        default:
          $ref: "#/components/responses/ErrorDefault"

  /categoria/:codigo:
    put:
      summary: Editar dados de uma categoria pelo seu codigo
      description: Recebe o código de uma categoria pelo parametro e altera seus valores pelos valores enviados no body
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
            description: Codigo da categoria (12 digitos) para buscá-la no banco de dados
          required: true
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/Categoria'
      responses:
        '200':
          $ref: "#/components/responses/Sucesso"
        
        '400':
          $ref: "#/components/responses/Error400"

        '404':
          $ref: "#/components/responses/Error404"
        
        default:
          $ref: "#/components/responses/ErrorDefault"

  /produto/:
    post:
      summary: Criar novo produto
      description: Esta é uma rota para a criação de um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produto'
      responses:
        '201':
          $ref: "#/components/responses/Criado"

        '400':
          $ref: "#/components/responses/Error400"

        default:
          $ref: "#/components/responses/ErrorDefault"

    